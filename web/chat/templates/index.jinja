{% extends "base.jinja" %}

{% block head %}
<link rel="stylesheet" href="{{ static('pages/index.css') }}">
{% endblock %}

{% block body %}
<main>

  <div id="sidebar">
  </div>

  <div id="chatContainer">
    <div id="chat">
      <div id="chatMessagesContainer">
      </div>

      <div id="chatInputContainer">
        <textarea id="chatInput" placeholder="Ask a question"></textarea>
        <button id="chatSubmit">â–²</button>
      </div>
    </div>
  </div>

</main>

<script>
{
  const UserMessage = (message) =>
    van.tags.div(
      { class: "user-message" },
      message.text,
    );

  const BotMessage = (message) =>
    van.tags.div(
      { class: "bot-message" },
      message.text,
    );

  class ChatArea {
    constructor() {
      // state
      this.messages = van.state([]);

      // init
      this.initUI();
    }

    initUI() {
      this.ui = {};

      this.ui.chatInput = document.getElementById("chatInput");
      this.ui.chatInput.addEventListener("keypress", (e) => {
        if (e.key === "Enter" && !e.shiftKey) {
          e.preventDefault();
          this.submitMessage();
        }
      });

      this.ui.chatSubmit = document.getElementById("chatSubmit");
      this.ui.chatSubmit.addEventListener("click", () => {
        this.submitMessage();
      });

      this.ui.chatMessagesContainer = document.getElementById("chatMessagesContainer");
      van.add(
        this.ui.chatMessagesContainer,
        () => van.tags.div(
          { id: "chatMessages" },
          ...this.messages.val.map(
            message =>
              message.fromUser
                ? UserMessage(message)
                : BotMessage(message)
          )
        )
      );
    }

    submitMessage() {
      if (!this.ui.chatInput.value) return;

      const userMessage = this.ui.chatInput.value;
      this.ui.chatInput.value = "";

      this.messages.val = [
        ...this.messages.val,
        { fromUser: true, text: userMessage },
      ];

      setTimeout(() => {
        this.messages.val = [
          ...this.messages.val,
          { fromUser: false, text: userMessage },
        ];
      }, 500);
    }
  }

  document.addEventListener("DOMContentLoaded", () => {
    new ChatArea();
  });
}
</script>
{% endblock %}
